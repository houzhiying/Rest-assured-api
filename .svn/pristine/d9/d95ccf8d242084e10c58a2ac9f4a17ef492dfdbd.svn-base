package com.vip.apitest.luxury.vlife;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.hasItems;

import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.databene.benerator.anno.Source;
import org.junit.Test;

import com.vip.apitest.luxury.BaseTestCase;
import com.vip.apitest.luxury.common.CommonMethod;
import com.vip.apitest.utility.MD5Encoder;


public class OfflineShopInfo extends BaseTestCase {

	@Test
	public void testOfflineShopInfoAtion_right() throws NoSuchAlgorithmException{
		System.out.println("通过SHOP_ID获得专卖店信息");
		InputStream jsonSchema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/offline_shopinfo.json");
		String sign = MD5Encoder.encodeByMD5("offline" + "shopinfo" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("shop_ids", "13").
		when().
			get(CommonMethod.vlife_uri+"/offline/shopinfo/").
		then().
			statusCode(200).
			body("code", equalTo(1)).
			body("data.shop_id", hasItems("13")).
			body(matchesJsonSchema(jsonSchema));
	}
	
	@Test
	public void testOfflineShopInfoAtion_null() throws NoSuchAlgorithmException{
		System.out.println("shop_ids字段不传时通过SHOP_ID获得专卖店信息");
		String sign = MD5Encoder.encodeByMD5("offline" + "shopinfo" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
		when().
			get(CommonMethod.vlife_uri+"/offline/shopinfo/").
		then().
			statusCode(200).
			body("code", equalTo(0)).
			body("msg", equalTo("商店id为空"));
	}
	
	@Test
	@Source("data/vlife/offline_shopinfo_error.csv")
	public void testOfflineShopInfoAtion_error(String testName, String shop_ids, int code, String msg) throws NoSuchAlgorithmException{
		System.out.println(testName + "根据UID查看预约购物车信息");
		String sign = MD5Encoder.encodeByMD5("offline" + "shopinfo" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("shop_ids", shop_ids).
		when().
			get(CommonMethod.vlife_uri+"/offline/shopinfo/").
		then().
			statusCode(200).
			body("code", equalTo(code)).
			body("msg", equalTo(msg));
	}
}
