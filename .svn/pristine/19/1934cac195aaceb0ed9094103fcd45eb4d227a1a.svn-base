package com.vip.apitest.luxury.vlife;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;

import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.databene.benerator.anno.Source;
import org.junit.BeforeClass;
import org.junit.Test;

import com.vip.apitest.luxury.BaseTestCase;
import com.vip.apitest.luxury.common.CommonMethod;
import com.vip.apitest.utility.MD5Encoder;

public class OfflineCheckSkuTest extends BaseTestCase{
	
	@BeforeClass
		public static void init(){
			dataSetVipfashion.initDataSet("src/test/resources/data/vlife/offlineCheckSku_data.xml");
		}
	
	@Test
	public void testOfflineCheckskuAtion_right() throws NoSuchAlgorithmException{
		System.out.println("可预约SKU表");
		InputStream jsonSchema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/offline_checksku.json");
		String sign = MD5Encoder.encodeByMD5("offline" + "checksku" + "viplux#123@", MessageDigest.getInstance("MD5"));
		
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("sku_id", "112").
			params("city_id", "1").
		when().
			get(CommonMethod.vlife_uri+"/offline/checksku/").
		then().
			statusCode(200).
			body("code", equalTo(1)).
			body(matchesJsonSchema(jsonSchema));
	}

	
	@Test
	@Source("data/vlife/offline_checksku_error.csv")
	public void testOfflineCheckskuAtion_error(String testName, String sku_id, String city_id, int code, String msg) throws NoSuchAlgorithmException{
		System.out.println(testName);
		String sign = MD5Encoder.encodeByMD5("offline" + "checksku" + "viplux#123@", MessageDigest.getInstance("MD5"));
		
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("sku_id", sku_id).
			params("city_id", city_id).
		when().
			get(CommonMethod.vlife_uri+"/offline/checksku/").
		then().
			statusCode(200).
			body("code", equalTo(code)).
			body("msg", equalTo(msg));
	}
}
