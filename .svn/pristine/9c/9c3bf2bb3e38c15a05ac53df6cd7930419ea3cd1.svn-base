package com.vip.apitest.luxury.vlife;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;
import static com.jayway.restassured.path.json.JsonPath.with;

import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Assert;
import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.unitils.reflectionassert.ReflectionAssert;
import org.unitils.reflectionassert.ReflectionComparatorMode;

import com.jayway.restassured.RestAssured;
import com.vip.apitest.luxury.BaseTestCase;
import com.vip.apitest.luxury.common.CommonMethod;
import com.vip.apitest.luxury.vlife.Object.BrandMatchDetailDO;
import com.vip.apitest.utility.MD5Encoder;


public class BrandMatchTest extends BaseTestCase{
	
	@Before
	public void setUp(){
		RestAssured.baseURI = "http://mapp.vipfashion.com/oi";
		RestAssured.port = 80;
		
	}
	
	/**
	 * 获取品牌搭配
	 * 正例
	 * schema校验
	 * 
	 */
	@Test
	public void testBrandMatch() throws NoSuchAlgorithmException{
		dataSetMgt.initDataSet("src/test/java/com/vip/apitest/luxury/vlife/dataset/BrandMatch.xml");
		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/brand_match.json");
		String sign = MD5Encoder.encodeByMD5("brand" + "match" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("id", "5").
		when().
			get("/brand/match/").
		then().
			statusCode(200).
			body("code", equalTo(1)).
			body(matchesJsonSchema(jsonschema));
	}
	
	
	/**
	 * 获取品牌搭配
	 * 正例
	 * 返回正确品牌搭配
	 * 
	 */
	@Test
	public void testBrandMatch01() throws NoSuchAlgorithmException{
		dataSetMgt.initDataSet("src/test/java/com/vip/apitest/luxury/vlife/dataset/BrandMatch.xml");
		String sign = MD5Encoder.encodeByMD5("brand" + "match" + "viplux#123@", MessageDigest.getInstance("MD5"));
		String json=given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("id", "5").
		when().
			get("/brand/match/").asString();
		
		BrandMatchDetailDO[] actualDetail=with(json).getObject("data.detail", BrandMatchDetailDO[].class);
		//构造预期结果
		List<BrandMatchDetailDO> exptBrandMatchDetailList=new ArrayList<BrandMatchDetailDO>();
		BrandMatchDetailDO detail1=new BrandMatchDetailDO();
		detail1.setBmid("5");
		detail1.setSku_id("21");
		detail1.setTitle("韩国钢托聚拢胸比基尼三件套黑白条纹沙滩罩衫遮肚显瘦女泳衣-M");
		
		BrandMatchDetailDO detail2=new BrandMatchDetailDO();
		detail2.setBmid("5");
		detail2.setSku_id("22");
		detail2.setTitle("韩国钢托聚拢胸比基尼三件套黑白条纹沙滩罩衫遮肚显瘦女泳衣-L");
		
		BrandMatchDetailDO detail3=new BrandMatchDetailDO();
		detail3.setBmid("5");
		detail3.setSku_id("23");
		detail3.setTitle("韩国钢托聚拢胸比基尼三件套黑白条纹沙滩罩衫遮肚显瘦女泳衣-S");
		
		exptBrandMatchDetailList.add(detail1);
		exptBrandMatchDetailList.add(detail2);
		exptBrandMatchDetailList.add(detail3);
		
		BrandMatchDetailDO[] exptDetail=exptBrandMatchDetailList.toArray(new BrandMatchDetailDO[3]);
		
//		ReflectionAssert.assertReflectionEquals(exptDetail,actualDetail,ReflectionComparatorMode.IGNORE_DEFAULTS);
		
		
		//校验data.brand_id
		String actualBrandid=with(json).getString("data.brand_id");
		Assert.assertEquals("8888",actualBrandid);
		
		
	}
	
	
	/**
	 * 获取品牌搭配
	 * 反例
	 * id为空
	 * 
	 */
	@Test
	public void testBrandMatch02() throws NoSuchAlgorithmException{
//		dataSetMgt.initDataSet("src/test/java/com/vip/apitest/luxury/vlife/dataset/BrandMatch.xml");
		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/brand_match.json");
		String sign = MD5Encoder.encodeByMD5("brand" + "match" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("id", "").
		when().
			get("/brand/match/").
		then().
			statusCode(200).
			body("code", equalTo(0)).
			body("msg",equalTo("id为空"));
	}
	
	
	/**
	 * 获取品牌搭配
	 * 反例
	 * id不存在
	 * 
	 */
	@Test
	public void testBrandMatch03() throws NoSuchAlgorithmException{
//		dataSetMgt.initDataSet("src/test/java/com/vip/apitest/luxury/vlife/dataset/BrandMatch.xml");
		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/brand_match.json");
		String sign = MD5Encoder.encodeByMD5("brand" + "match" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
			params("id", "1919919191991").
		when().
			get("/brand/match/").
		then().
			statusCode(200).
			body("code", equalTo(0));
	}

}
