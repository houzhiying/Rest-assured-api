package com.vip.apitest.luxury.magento;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;

import java.io.InputStream;

import org.databene.benerator.anno.Source;
import org.junit.Test;

import com.vip.apitest.luxury.BaseTestCase;

public class ProductStockTest extends BaseTestCase{

	@Test
	@Source("data/vlife/product_stock.csv")
	public void testGetProductStock(String testName,String ids,int responseStatus,int dataCode, String message){
    	System.out.println(testName);
//		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/product_stock.json");
		given().
			params("ids", ids).
		when().
			get("http://shop-mapp.vipfashion.com/api/rest/productstock").
		then().
		 	statusCode(responseStatus).
		 	body("code",equalTo(dataCode)).
		 	body("msg",equalTo(message));
//		 	body(matchesJsonSchema(jsonschema));			
    }
	
	@Test
	public void testGetProductStockNoIds(){
    	System.out.println("测试不传入Ids");
//		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/product_stock.json");
		given().
//			params("ids", ids).
		when().
			get("http://shop-mapp.vipfashion.com/api/rest/productstock").
		then().
		 	statusCode(200).
		 	body("code",equalTo(1)).
		 	body("msg",equalTo(""));
//		 	body(matchesJsonSchema(jsonschema));			
    }
	
	@Test
	public void testGetProductStock(){
    	System.out.println("测试传入正确的Ids（多个ids值）");
		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/product_stock.json");
		String productIds = "ids=3,10";
		String URI = "http://shop-mapp.vipfashion.com/api/rest/productstock?"+productIds;
//		String URI = "http://shop-mapp.vipfashion.com/api/rest/productstock?ids=3,10";
		given().
//		params("ids", "3,10").
		when().
			get(URI).
		then().
		 	statusCode(200).
		 	body("code",equalTo(1)).
		 	body("msg",equalTo("")).
		 	body(matchesJsonSchema(jsonschema));			
    }
}
