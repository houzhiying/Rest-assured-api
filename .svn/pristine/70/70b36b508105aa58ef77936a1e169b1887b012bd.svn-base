package com.vip.apitest.utility.db;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.dbunit.DatabaseUnitException;
import org.dbunit.database.DatabaseConnection;
import org.dbunit.database.QueryDataSet;
import org.dbunit.dataset.xml.FlatXmlDataSet;

public class DbUnitTools {

	
	public static void generateDataSetFile(DataSource dataSource,String tableName,String sql) throws FileNotFoundException, IOException, SQLException, DatabaseUnitException{
		DatabaseConnection databaseConnection = null;
		Connection connection = dataSource.getConnection();
		databaseConnection = getDatabaseConnection(dataSource, connection);
		
		QueryDataSet queryDataSet=new QueryDataSet(databaseConnection);
		queryDataSet.addTable(tableName, sql);
		StringBuffer destFilePath = new StringBuffer("src/test/java/com/vip/apitest/");
		String path=destFilePath.append("temp.xml").toString();

		File destFile = new File(path);
		FlatXmlDataSet.write(queryDataSet, new FileOutputStream(destFile));
		
		
	}
	
	
	private static DatabaseConnection getDatabaseConnection(DataSource dataSource, Connection connection) throws DatabaseUnitException, SQLException {
		String schemaName = getSchemaName(dataSource, connection);
		if (schemaName != null) {
			return new DatabaseConnection(connection, schemaName);
		} else {
			return new DatabaseConnection(connection);
		}

	}
	
	private static String getSchemaName(DataSource dataSource, Connection connection) throws SQLException {
		String schemaName = null;
		if (dataSource instanceof SchemaDataSource) {
			SchemaDataSource sds = (SchemaDataSource) dataSource;
			schemaName = sds.getSchemaName();
		}
		if (schemaName == null) {
			schemaName = connection.getMetaData().getUserName();
		}
		return schemaName;
	}
	

}
