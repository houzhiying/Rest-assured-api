package com.vip.apitest.luxury.vlife;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;

import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.databene.benerator.anno.Source;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import com.vip.apitest.luxury.BaseTestCase;
import com.vip.apitest.luxury.common.CommonMethod;
import com.vip.apitest.utility.MD5Encoder;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class OfflineCityListTest extends BaseTestCase{
	
	@Test
	public void testOfflineCityListAtion_right() throws NoSuchAlgorithmException{
		System.out.println("获得店铺所在市的列表");
		InputStream jsonSchema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/offline_citylist.json");
		String sign = MD5Encoder.encodeByMD5("offline" + "citylist" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
	        params("sign", sign).
	        params("appid", CommonMethod.appid).
	        params("brand_id", CommonMethod.getBrandIds().get(0)).
        when().
    		get(CommonMethod.vlife_uri+"/offline/citylist/").
    	then().
        	statusCode(200).
        	body("code", equalTo(1)).
        	body(matchesJsonSchema(jsonSchema));
	}
	
	@Test
	@Source("data/vlife/offline_citylist_error.csv")
	public void testOfflineCityListAtion_error(String testName, String sign, String appId, String brand_id, int code, String msg){
		System.out.println(testName);
		given().
			params("sign", sign).
			params("appid", appId).
			params("brand_id", brand_id).
		when().
			get(CommonMethod.vlife_uri+"/offline/citylist/").
		then().
			statusCode(200).
			body("code", equalTo(code)).
			body("msg", equalTo(msg));
	}
	
	@Test
	public void testOfflineCityListAtion_signIsNull() throws NoSuchAlgorithmException{
		System.out.println("sign字段不传时获得店铺所在市的列表");
		given().
			params("appid", CommonMethod.appid).
			params("brand_id", CommonMethod.getBrandIds().get(0)).
		when().
			get(CommonMethod.vlife_uri+"/offline/citylist/").
		then().
			statusCode(200).
			body("code", equalTo(0)).
			body("msg", equalTo("接口未加签"));
	}
	
	@Test
	public void testOfflineCityListAtion_appidIsNull() throws NoSuchAlgorithmException{
		System.out.println("appid字段不传时获得店铺所在市的列表");
		String sign = MD5Encoder.encodeByMD5("offline" + "citylist" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("brand_id", CommonMethod.getBrandIds().get(0)).
		when().
			get(CommonMethod.vlife_uri+"/offline/citylist/").
		then().
			statusCode(200).
			body("code", equalTo(0)).
			body("msg", equalTo("appid为空"));
	}
	
	@Test
	public void testOfflineCityListAtion_brandIdIsNull() throws NoSuchAlgorithmException{
		System.out.println("brand_id字段不传时获得店铺所在市的列表");
		String sign = MD5Encoder.encodeByMD5("offline" + "citylist" + "viplux#123@", MessageDigest.getInstance("MD5"));
		given().
			params("sign", sign).
			params("appid", CommonMethod.appid).
		when().
			get(CommonMethod.vlife_uri+"/offline/citylist/").
		then().
			statusCode(200).
			body("code", equalTo(0)).
			body("msg", equalTo("品牌id为空"));
	}
}
