package com.vip.apitest.luxury.magento;

import static com.jayway.restassured.RestAssured.given;
import static com.jayway.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema;
import static org.hamcrest.Matchers.equalTo;

import java.io.InputStream;

import org.junit.BeforeClass;
import org.junit.Test;

import com.vip.apitest.luxury.BaseTestCase;
import com.vip.apitest.luxury.common.CommonMethod;

public class AddressGetTest extends BaseTestCase{
	
	NewOrderTest newOrder=new NewOrderTest();
	
	@BeforeClass
	public static void init() throws Exception{
		CommonMethod.getUidAndToken();
	}
	
	/**
	 * 获取用户地址列表
	 * 正例
	 * 校验schema
	 * 
	 */
	
	@Test
	public void testAddressGet(){
		InputStream jsonschema = Thread.currentThread().getContextClassLoader().getResourceAsStream("json/address_get.json");
//		String token=newOrder.getToken("jerry.hou@vipshop.com","cbb4b0621085c0333a42656532b8863d");
		
		given().
			header("accesstoken",CommonMethod.token).
		when().
			get("http://shop-mapp.vipfashion.com/api/rest/customers/" + CommonMethod.uid + "/addresses").
		then().
			statusCode(200).
			body("code", equalTo(1)).
			body(matchesJsonSchema(jsonschema));
		
	}
	
	
	/**
	 * 获取用户地址列表
	 * 反例
	 * customer_id不存在
	 * 
	 */	
	@Test
	public void testAddressGet01(){
		
//		String token=newOrder.getToken("jerry.hou@vipshop.com","cbb4b0621085c0333a42656532b8863d");
		
		given().
			header("accesstoken",CommonMethod.token).
		when().
			get("http://shop-mapp.vipfashion.com/api/rest/customers/888888888888/addresses").
		then().
			statusCode(404);
		
	}
	
	
	/**
	 * 获取用户地址列表
	 * 反例
	 * token错误
	 * 
	 */	
	@Test
	public void testAddressGet02(){
		
//		String token=newOrder.getToken("jerry.hou@vipshop.com","cbb4b0621085c0333a42656532b8863d");
		
		given().
			header("accesstoken","1234").
		when().
			get("http://shop-mapp.vipfashion.com/api/rest/customers/888888888888/addresses").
		then().
			statusCode(403);
//		
	}

}
